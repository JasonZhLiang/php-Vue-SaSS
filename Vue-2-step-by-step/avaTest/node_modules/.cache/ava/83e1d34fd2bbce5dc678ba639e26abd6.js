'use strict';

var _vue = require('vue/dist/vue.js');

var _vue2 = _interopRequireDefault(_vue);

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _Notification = require('../src/Notification');

var _Notification2 = _interopRequireDefault(_Notification);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//since ava allow to use es2015 syntax but not allow to apply any other source file imported, so we need install babel-register plugin, then need babel preset plugin


//so we just reference the standalone build file, make sure don't do this in production
let vm; // import Vue from 'vue';//this is using the runtime-only build of Vue where the template compiler is not available


_ava2.default.beforeEach(t => {
    let N = _vue2.default.extend(_Notification2.default);
    vm = new N({ propsData: {
            message: 'foobar'
        } }).$mount();
});

(0, _ava2.default)('that it render a notification', t => {
    // t.is(Notification.data().message,'Hello World');
    new _vue2.default(_Notification2.default).$mount();
    let n = new _vue2.default(_Notification2.default).$mount();
    console.log(n.$el.textContent);
    console.log(n.$el.innerHTML);

    // t.is(n.$el.textContent,'Foobar');

    let N = _vue2.default.extend(_Notification2.default);
    let vm = new N({ propsData: {
            message: 'Foobar'
        } }).$mount(); //we need mounted to vue explicitly

    t.is(vm.$el.textContent, 'Foobar');
});
//since we are not runing in the browser, the test is thought node.js, it doesn't know what is resource document.body is. the Vue code el === document.body || el == document.documentElement is going wrong
//and we need to mock the browser environment,  npm install browser-env --save-dev
//"./test/helper/setup-browser-env.js" //set up in package.json to tell ava to automatically require a littel helper file for test


(0, _ava2.default)('that it capitalizes the message', t => {
    let N = _vue2.default.extend(_Notification2.default);
    let vm = new N({ propsData: {
            message: 'foobar'
        } }).$mount();

    t.is(vm.$el.textContent, 'FOOBAR');
});

(0, _ava2.default)('that it computes the notification', t => {
    // let N = Vue.extend(Notification);
    // let vm = new N({propsData:{
    //     message:'foobar'
    // }}).$mount();

    t.is(vm.$el.textContent, 'FOOBARFOOBAR');
});
//# sourceMappingURL=N:\ERP\Documents\AppMockups\BackhaulNetworkMgmt\phprefresh\Vue-2-step-by-step\avaTest\node_modules\.cache\ava\83e1d34fd2bbce5dc678ba639e26abd6.js.map